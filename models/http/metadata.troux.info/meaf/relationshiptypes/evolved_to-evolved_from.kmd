<?xml version="1.0"?>
<?metis version="5.0"?>
<?metisxml version="1.2"?>
<!DOCTYPE metis PUBLIC "-//METIS/METIS XML 1.2//EN" "http://xml.metis.no/metis12.dtd">

<metis
 xmlns="http://www.metis.no/metis"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 types="1"
 nextoid="2">

 <type id="Reltype_evolved_to-evolved_from_UUID" name="evolved_to-evolved_from" title="evolved to" desc="Allows you to specify that any object has evolved/will evolve to something newer, which is another instance of the same object type. This capability is useful for representing changes to objects through time, where comparing properties will show you what has changed between each instance in the change chain defined by this relationship. This relationship can only connect two objects of the exact same type. An object can evolve to any number of newer objects (splitting). Likewise, an object can evolve from any number of older objects (merging)." usage="abstract">
  <complex-type-link xlink:role="type" xlink:href="../abstracttypes/generic_relationship_type.kmd#BasicRelationshipType"/>
  <named-criteria-link name="FindAllevolved_to-evolved_from" xlink:role="criteria" xlink:title="Find all Evolved to relationships" xlink:href="../criteria/find_relationship_types_autogenerated.kmd#Reltype_evolved_to-evolved_from_UUID"/>
  <valueset vset="shared" size="2" xlink:role="type" xlink:title="evolved to" xlink:href="#Reltype_evolved_to-evolved_from_UUID">
   <string name="from">evolved to</string>
   <string name="to">evolved from</string>
  </valueset>
 </type>

 <type id="Reltype_generic_component_evolved_to_evolved_from_generic_component_UUID" name="generic_component_evolved_to_evolved_from_generic_component" title="Basic Component evolved to Basic Component" desc="Use this relationship to specify that any object has evolved/will evolve to something newer, which is another instance of the same object type. This capability is useful for representing changes to objects through time, where comparing properties will show you what has changed between each instance in the change chain defined by this relationship. This relationship can only connect two objects of the exact same type. An object can evolve to any number of newer objects (splitting). Likewise, an object can evolve from any number of older objects (merging)." usage="relationship">
  <complex-type-link xlink:role="type" xlink:href="#Reltype_evolved_to-evolved_from_UUID"/>
  <connect-rule>
   <origin-rule min="0" max="..." xlink:role="type"
 xlink:href="../abstracttypes/generic_component.kmd#BasicComponentType" xlink:actuate="user"/>
   <target-rule min="0" max="..." xlink:role="type"
 xlink:href="../abstracttypes/generic_component.kmd#BasicComponentType" xlink:actuate="user"/>
  </connect-rule>
  <valueset vset="shared" size="1" xlink:role="type" xlink:title="Basic Component evolved to Basic Component" xlink:href="#Reltype_generic_component_evolved_to_evolved_from_generic_component_UUID">
   <integer name="troux_component2EndType">1</integer>
  </valueset>
 </type>

</metis>
